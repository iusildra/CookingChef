@startuml

hide empty members

class "Main" as UI {
    +redirect()
}

class "commentController" as Controller {
    -Comment com
    +onClickButtonAddComment()
    +onClickButtonDeleteComment()
    +onClickButtonEditComment()
}

class "commentFacade" as Facade {
    +getCommentDAO()
    +getComments()
    +addComment()
    +deleteComment()
    +editComment()
}

interface "commentDAO" as DAO {
    +getComment()
    +getComments()
    +createComment()
    +updateComment()
    +deleteComment()

}

interface AbstractFactory {
    +getCommentDAO()
    +getInstance()
}

class PostgresDAOFactory implements AbstractFactory {
    +getCommentDAO()
    +getInstance()
}

UI       "1" -->  "1" Controller: > controlled by
Controller "1" -->  "1" Facade: > uses
Facade     "1" -u-> "1" AbstractFactory: > uses
AbstractFactory    "1" -->  "1" DAO: > creates
Facade     "1" -u-> "1" DAO: > uses



@enduml