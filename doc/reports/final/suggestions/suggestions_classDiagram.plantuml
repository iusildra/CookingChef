@startuml SuggestionsUser
hide empty members

class Main {
  + display()
}

class SuggestionController {
  + SuggestionController()
  + ViewSuggestionDetails()
  + OnClickSendSuggestion()
  + OnClickUpdateSuggestion()
  + DeleteSuggestion()
  + OnClickCancel()
}

class UserSuggestionFacade {
  - SuggestionDAO suggestionDAO
  + UserSuggestionFacade()
  + SendSuggestion()
  + UpdateSuggestion()
  + DeleteSuggestion()
}

interface AbstractFactory {
  + getUserSuggestionDAO()
  + getAdminSuggestionDAO()
}

class PostgresFactory extends AbstractFactory {
  + getUserSuggestionDAO()
  + getAdminSuggestionDAO()
}

interface SuggestionUserDAO {
  + CreateSuggestion()
  + GetSuggestion()
  + GetSuggestions()
}

interface SuggestionAdminDAO extends SuggestionUserDAO {
  + UpdateSuggestion()
  + DeleteSuggestion()
}

class PostgresUserSuggestionDAO {
  + {static} getPostgresUserSuggestionDAO()
  + createSuggestion()
  + getSuggestion()
  + getSuggestions()
  + updateSuggestion()
  + deleteSuggestion()
}

class PostgresAdminSuggestionDAO extends PostgresUserSuggestionDAO {
  + {static} getPostgresAdminSuggestionDAO()
  + updateSuggestion()
  + deleteSuggestion()
}

class ConnectionManager {
  - {static} PGConnectionPoolDataSource: DataSource
  + {static} openConnectionPool(): void
  + {static} getConnection(): Connection
  + {static} closeConnectionPool(): void
}

PostgresUserSuggestionDAO   .l.|> SuggestionUserDAO
PostgresAdminSuggestionDAO  .l.|> SuggestionAdminDAO

Main                        -r-> SuggestionController: < controls
SuggestionController        -r-> UserSuggestionFacade: > uses
UserSuggestionFacade        --> AbstractFactory: > uses
PostgresFactory             -l-> PostgresUserSuggestionDAO: > creates
PostgresFactory             --> PostgresAdminSuggestionDAO: > creates
PostgresUserSuggestionDAO   -u-> ConnectionManager: > get connection from

@enduml