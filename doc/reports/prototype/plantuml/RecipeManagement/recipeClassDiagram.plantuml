@startuml recipeClassDiagram
hide empty members

class Main {
  - {static} User : user
  - {static} Stage : stage
  + main()
  + redirect()
  + start()
}

class RecipeAdminController {
  - CategoryFacade : categoryFacade
  - IngredientFacade : ingredientFacade
  - RecipeFacade : recipeFacade
  - ListView<Recipe> : recipeListView
  - addImageRecipe() : byte[]
  - recupImage() : byte[]
  - showForm()
  + showFormCreate()
  + showFormUpdate()
  + validateForm()
  + showList() : List<Recipe>
  - createRecipe()
  + deleteRecipe()
  - updateCategory()
  + initialize()
  + listCellFactoryCategory() : ListCell<Recipe>

}


class RecipeFacade {
  + addRecipe() : Optional<Recipe>
  + updateRecipe()
  + deleteRecipe()
  + getRecipeById() : Optional<Recipe>
  + getRecipiesByCategories() : List<Recipe>
  + getRecipiesByIngredients() : List<Recipe>
  + getRecipiesByName() : List<Recipe>
}


interface AbstractFactory {
  + {abstract} getRecipeDAO() : RecipeDAO

}


class PostgresFactory {
  + get RecipeDAO() : RecipeDAO
}


Interface RecipeDAO {
  + {abstract} addRecipe()
  + {abstract} updateRecipe()
  + {abstract} deleteRecipe()
  + {abstract} getRecipeById() : Optional<Recipe>
  + {abstract} getRecipesByCategories() : List<Recipe>
  + {abstract} getRecipesByIngredients() : List<Recipe>
  + {abstract} getRecipiesByName() : List<Recipe>
}


class PostgresRecipeDAO{
  + addRecipe()
  + updateRecipe()
  + deleteRecipe()
  + getRecipeById() : Optional<Recipe>
  + getRecipesByCategories() : List<Recipe>
  + getRecipesByIngredients() : List<Recipe>
  + getRecipiesByName() : List<Recipe>
}


class ConnectionManager {
  - {static} PGConnectionPoolDataSource: DataSource
  + {static} openConnectionPool(): void
  + {static} getConnection(): Connection
  + {static} closeConnectionPool(): void
}


PostgresFactory       -u-|> AbstractFactory
PostgresRecipeDAO     -l-|> RecipeDAO

Main                  -r-> RecipeAdminController: <  controls
RecipeAdminController -r-> RecipeFacade: > interact with
RecipeFacade          --> AbstractFactory: > uses
PostgresFactory       --> PostgresRecipeDAO: > create
PostgresRecipeDAO     --> ConnectionManager: > get connection from



@enduml