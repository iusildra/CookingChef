@startuml IngredientClassDiagram

class IngredientPage {
    + redirect()
}

class IngredientController {
  # onClickButtonCreate()
  # onClickButtonDelete()
  # onClickButtonUpdate()
}


class IngredientFacade {
  - IngredientDAO: IngredientDAO
  + createIngredient()
  + updateIngredient()
  + deleteIngredient()
}


interface IngredientAbstractFactory {
  + {abstract} getIngredientDAO() : IngredientDAO

}


class PostgresFactory {
  + getPostgresFactory(): PostgresFactory
  + get IngredientDAO() : IngredientDAO
}


Interface IngredientDAO {
  + {abstract} createIngredient()
  + {abstract} updateIngredient()
  + {abstract} deleteIngredient()
}


class PostgresIngredientDAO{
  + getPostgresIngredientDAO() : IngredientDAO
  + createIngredient()
  + updateIngredient()
  + deleteIngredient()
}


class ConnectionManager {
  # {static} PGConnectionPoolDataSource: DataSource
  + {static} openConnectionPool(): void
  + {static} getConnection(): Connection
  + {static} closeConnectionPool(): void
}


database "Postgres\nDatabase" as Postgres {

}

class PostgresFactory extends IngredientAbstractFactory
class PostgresIngredientDAO extends IngredientDAO

IngredientPage --> IngredientController : <<create>>
IngredientController --> IngredientFacade : <<obtains>>
IngredientFacade -- IngredientAbstractFactory
IngredientFacade --> IngredientDAO : <<use>>
IngredientAbstractFactory --> IngredientDAO : <<create>>
IngredientDAO -- ConnectionManager : <<use>>
ConnectionManager --> Postgres



@enduml